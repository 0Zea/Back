import{_ as p,c as r,a as o,k as g,d as b,w as a,v as u,t as i,x as c,j as v,o as d}from"./index-Cj42os1F.js";import{P as f}from"./ProductModal-D3ZF4X4w.js";const k={name:"GoalEditPage",components:{ProductModal:f},props:["goalId"],data(){return{goal:{title:"",startDate:"",endDate:"",amount:0},showProductModal:!1,selectedAccount:null,accounts:[{accountId:1,bankName:"우리",accountNum:"1234-****-5678"},{accountId:2,bankName:"카카오뱅크",accountNum:"3333-12-4567890"}]}},computed:{formattedAmount(){return Number(this.goal.amount).toLocaleString()}},mounted(){this.fetchGoalDetail()},methods:{async fetchGoalDetail(){try{const t=(await c.get(`/api/goals/${this.goalId}`)).data;this.goal.title=t.goalName,this.goal.startDate=t.startDate,this.goal.endDate=t.endDate,this.goal.amount=t.targetAmount}catch{alert("목표 정보를 불러오지 못했습니다.")}},async submitEdit(){try{await c.put(`/api/goals/${this.goalId}`,{goal_name:this.goal.title,start_date:this.goal.startDate,end_date:this.goal.endDate,target_amount:this.goal.amount}),this.$router.push("/goals")}catch{alert("목표 수정 실패")}},goBack(){this.$router.back()},handleProductConnect(n){this.selectedAccount=this.accounts.find(t=>t.accountId===n),this.showProductModal=!1}}},D={class:"goal-edit-page"},P={class:"form-group"},y={class:"form-group"},C={class:"date-range"},w={class:"form-group"},x={class:"amount-input"},N={class:"helper-text"},A={class:"form-group"},M={key:0,class:"product-card"},h={class:"product-text"},B={class:"btn-row"};function I(n,t,E,V,e,l){const m=v("ProductModal");return d(),r("div",D,[t[18]||(t[18]=o("h2",null,"목표 수정하기",-1)),o("div",P,[t[9]||(t[9]=o("label",null,"목표 이름",-1)),a(o("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=s=>e.goal.title=s)},null,512),[[u,e.goal.title]])]),o("div",y,[t[11]||(t[11]=o("label",null,"목표 기간",-1)),o("div",C,[a(o("input",{type:"date","onUpdate:modelValue":t[1]||(t[1]=s=>e.goal.startDate=s)},null,512),[[u,e.goal.startDate]]),t[10]||(t[10]=o("span",null,"~",-1)),a(o("input",{type:"date","onUpdate:modelValue":t[2]||(t[2]=s=>e.goal.endDate=s)},null,512),[[u,e.goal.endDate]])])]),o("div",w,[t[13]||(t[13]=o("label",null,"목표 금액",-1)),o("div",x,[a(o("input",{type:"number","onUpdate:modelValue":t[3]||(t[3]=s=>e.goal.amount=s)},null,512),[[u,e.goal.amount]]),t[12]||(t[12]=o("span",null,"원",-1))]),o("p",N,i(l.formattedAmount)+"원",1)]),o("div",A,[t[16]||(t[16]=o("label",null,"금융 상품 연결하기",-1)),t[17]||(t[17]=o("p",{class:"subtext"},"최소 1개 이상의 상품을 연결해야 합니다.",-1)),e.selectedAccount?(d(),r("div",M,[t[14]||(t[14]=o("span",{class:"product-icon"},"💳",-1)),o("div",h,i(e.selectedAccount.bankName)+" - "+i(e.selectedAccount.accountNum),1),o("button",{class:"remove-btn",onClick:t[4]||(t[4]=s=>e.selectedAccount=null)},"－")])):(d(),r("div",{key:1,class:"product-placeholder",onClick:t[5]||(t[5]=s=>e.showProductModal=!0)},t[15]||(t[15]=[o("span",null,"＋",-1)])))]),o("div",B,[o("button",{class:"btn cancel",onClick:t[6]||(t[6]=(...s)=>l.goBack&&l.goBack(...s))},"취소하기"),o("button",{class:"btn submit",onClick:t[7]||(t[7]=(...s)=>l.submitEdit&&l.submitEdit(...s))},"목표 수정하기")]),e.showProductModal?(d(),g(m,{key:0,accounts:e.accounts,onClose:t[8]||(t[8]=s=>e.showProductModal=!1),onConnect:l.handleProductConnect},null,8,["accounts","onConnect"])):b("",!0)])}const S=p(k,[["render",I],["__scopeId","data-v-57889a7e"]]);export{S as default};
