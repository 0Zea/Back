<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ozea.goal.mapper.GoalMapper">

    <select id="findPayAmountByUserId" resultType="long">
        SELECT GREATEST(IFNULL(salary, 0) - IFNULL(pay_amount, 0), 0) AS monthly_net
        FROM user
        WHERE user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
    </select>

    <insert id="claimGoalAchieveReward">
        INSERT INTO point (
            point_id, user_id, goal_id, point_amount, type, type_detail, total_amount, created_at
        )
        SELECT
            UUID_TO_BIN(UUID()),
            g.user_id,
            g.goal_id,
            FLOOR(g.target_amount * 0.001),          -- 보상 = 목표금액의 0.001 (내림)
            1,                                       -- 1 = 적립
            '목표 달성 보상',
            COALESCE((
                         SELECT p.total_amount
                         FROM point p
                         WHERE p.user_id = g.user_id
                         ORDER BY p.created_at DESC, p.point_id DESC
                     LIMIT 1
                ), 0) + FLOOR(g.target_amount * 0.001),
            NOW()
        FROM goal g
        WHERE g.goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
          AND g.user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
    <![CDATA[
          AND g.end_date < CURDATE()
          AND g.save_amount >= g.target_amount
    ]]>
    AND NOT EXISTS (
            SELECT 1 FROM point px
            WHERE px.user_id     = g.user_id
              AND px.goal_id     = g.goal_id
              AND px.type        = 1
              AND px.type_detail = '목표 달성 보상'
        )
    </insert>

    <!-- 이미 지급 여부 -->
    <select id="existsGoalRewardPoint" resultType="boolean">
        SELECT EXISTS(
            SELECT 1 FROM point
            WHERE user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
              AND goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
              AND type = 1
              AND type_detail = '목표 달성 보상'
        )
    </select>

    <select id="calcGoalRewardPoints" resultType="int">
        SELECT FLOOR(g.target_amount * 0.001)
        FROM goal g
        WHERE g.goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
          AND g.user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
    </select>

    <select id="findProductsWithOptions" resultType="org.ozea.goal.dto.response.ProductRecommendResponseDto">
        SELECT
            p.fin_prdt_cd,
            p.kor_co_nm,
            p.fin_prdt_nm,
            o.rsrv_type_nm,
            o.save_trm,
            o.intr_rate,
            o.intr_rate2
        FROM product p
                 JOIN productoption o ON p.fin_prdt_cd = o.fin_prdt_cd
    </select>

    <update id="updateSuccessGoals">
  <![CDATA[
        UPDATE goal
        SET status = 'SUCCESS'
        WHERE end_date < NOW()
          AND save_amount >= target_amount
          AND status != 'SUCCESS'
        ]]>
</update>

    <update id="updateFailedGoals">
  <![CDATA[
        UPDATE goal
        SET status = 'FAIL'
        WHERE end_date < NOW()
          AND save_amount < target_amount
          AND status != 'FAIL'
        ]]>
</update>

    <select id="findPastGoalsByUserId" resultType="org.ozea.goal.dto.response.PastGoalResponseDto">
        SELECT
            g.goal_id,
            g.goal_name AS title,
            g.start_date,
            g.end_date,
            g.target_amount,
            g.status = 'SUCCESS' AS success
        FROM goal g
        WHERE g.user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
     <![CDATA[
          AND g.end_date < CURDATE()
        ]]>
        ORDER BY g.end_date DESC, g.start_date DESC, g.goal_id DESC
    </select>

    <select id="findAccountsByUserId" resultType="org.ozea.goal.dto.response.LinkedAccountDto">
        SELECT
            account_id,
            bank_name,
            account_num,
            account_type,
            balance
        FROM BankAccount
        WHERE user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
    </select>

    <update id="unlinkAllAccountsFromGoal">
        UPDATE BankAccount
        SET goal_id = NULL
        WHERE goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
    </update>


    <update id="unlinkAccount">
        UPDATE BankAccount
        SET goal_id = NULL
        WHERE account_id = #{accountId}
    </update>

    <select id="isAccountAlreadyLinked" resultType="int">
        SELECT COUNT(*) FROM BankAccount
        WHERE account_id = #{accountId} AND goal_id IS NOT NULL
    </select>

    <update id="linkAccountToGoal">
        UPDATE BankAccount
        SET goal_id = #{goalId}
        WHERE account_id = #{accountId} AND goal_id IS NULL
    </update>

    <select id="sumTargetAmountOverlappingGoals" resultType="long">
        SELECT IFNULL(SUM(target_amount), 0)
        FROM goal
        WHERE user_id = #{userId}
          AND (
            (start_date BETWEEN #{startDate} AND #{endDate})
                OR
            (end_date BETWEEN #{startDate} AND #{endDate})
                OR
            (#{startDate} BETWEEN start_date AND end_date)
                OR
            (#{endDate} BETWEEN start_date AND end_date)
            )
    </select>


    <delete id="deleteByGoalIdAndUserId">
        DELETE FROM goal
        WHERE goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
    </delete>

    <select id="findAllByUserId" resultType="org.ozea.goal.domain.Goal">
        SELECT
        g.goal_id,
        g.user_id,
        g.goal_name,
        g.target_amount,
        COALESCE(SUM(b.balance), 0) AS save_amount,
        g.start_date,
        g.end_date,
        g.status,
        g.deposit_date
        FROM goal g
        LEFT JOIN BankAccount b
        ON b.goal_id = g.goal_id
        WHERE g.user_id = #{userId, jdbcType=BINARY, javaType=java.util.UUID}
        AND g.end_date >= CURDATE()
        GROUP BY
        g.goal_id, g.user_id, g.goal_name, g.target_amount,
        g.start_date, g.end_date, g.status, g.deposit_date
        ORDER BY g.start_date DESC
    </select>

    <select id="findByGoalId" resultType="org.ozea.goal.domain.Goal">
        SELECT *
        FROM goal
        WHERE goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
    </select>

    <update id="updateGoalByIdAndUserId">
        UPDATE goal
        SET
            goal_name = #{dto.goal_name},
            target_amount = #{dto.target_amount},
            start_date = #{dto.start_date},
            end_date = #{dto.end_date},
            deposit_date = #{dto.deposit_date}
        WHERE goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
    </update>

    <select id="findLinkedAccountsByGoalId" resultType="org.ozea.goal.dto.response.LinkedAccountDto">
        SELECT
            account_id,
            bank_name,
            account_num,
            account_type,
            balance
        FROM BankAccount
        WHERE goal_id = #{goalId, jdbcType=BINARY, javaType=java.util.UUID}
    </select>


    <insert id="insertGoal" parameterType="org.ozea.goal.domain.Goal">
        INSERT INTO Goal (
            goal_id, user_id, goal_name, target_amount,
            save_amount, start_date, end_date, status, deposit_date
        ) VALUES (
                    #{goalId, jdbcType=BINARY, javaType=java.util.UUID},
                    #{userId, jdbcType=BINARY, javaType=java.util.UUID},
                    #{goalName},
                    #{targetAmount},
                    #{saveAmount},
                    #{startDate},
                    #{endDate},
                    #{status},
                    #{depositDate}
                 )
    </insert>

</mapper> 